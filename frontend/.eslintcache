[{"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\index.js":"1","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\App.js":"2","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Footer.js":"3","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Header.js":"4","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Product.js":"6","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Rating.js":"7","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\store.js":"9","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\productReducers.js":"10","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\constants\\constants.js":"11","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\productActions.js":"12","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Message.js":"14","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\cartActions.js":"17","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\userReducers.js":"18","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\LoginScreen.js":"19","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\FormContainer.js":"20","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\userActions.js":"21","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\RegisterScreen.js":"22","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\ProfileScreen.js":"23","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\ShippingScreen.js":"24","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\CheckoutSteps.js":"25","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\PaymentScreen.js":"26","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\PlaceOrderScreen.js":"27","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\orderReducers.js":"28","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\OrderScreen.js":"30"},{"size":365,"mtime":1609524432755,"results":"31","hashOfConfig":"32"},{"size":1626,"mtime":1620167012368,"results":"33","hashOfConfig":"32"},{"size":298,"mtime":1609085499511,"results":"34","hashOfConfig":"32"},{"size":1717,"mtime":1610561223343,"results":"35","hashOfConfig":"32"},{"size":1055,"mtime":1609611936399,"results":"36","hashOfConfig":"32"},{"size":838,"mtime":1609271771901,"results":"37","hashOfConfig":"32"},{"size":549,"mtime":1609164298559,"results":"38","hashOfConfig":"32"},{"size":4202,"mtime":1620757109273,"results":"39","hashOfConfig":"32"},{"size":1767,"mtime":1620261564445,"results":"40","hashOfConfig":"32"},{"size":1026,"mtime":1609612357948,"results":"41","hashOfConfig":"32"},{"size":2155,"mtime":1620260585667,"results":"42","hashOfConfig":"32"},{"size":1161,"mtime":1609612546515,"results":"43","hashOfConfig":"32"},{"size":391,"mtime":1609611691206,"results":"44","hashOfConfig":"32"},{"size":188,"mtime":1609611755744,"results":"45","hashOfConfig":"32"},{"size":3863,"mtime":1609728999853,"results":"46","hashOfConfig":"32"},{"size":1117,"mtime":1610980911022,"results":"47","hashOfConfig":"32"},{"size":1273,"mtime":1619886580645,"results":"48","hashOfConfig":"32"},{"size":1891,"mtime":1610570753600,"results":"49","hashOfConfig":"32"},{"size":2205,"mtime":1610543532076,"results":"50","hashOfConfig":"32"},{"size":344,"mtime":1610379947171,"results":"51","hashOfConfig":"32"},{"size":3506,"mtime":1610572836505,"results":"52","hashOfConfig":"32"},{"size":3221,"mtime":1610544042326,"results":"53","hashOfConfig":"32"},{"size":4898,"mtime":1620262256518,"results":"54","hashOfConfig":"32"},{"size":2638,"mtime":1619895131578,"results":"55","hashOfConfig":"32"},{"size":966,"mtime":1619894149149,"results":"56","hashOfConfig":"32"},{"size":1838,"mtime":1619878507196,"results":"57","hashOfConfig":"32"},{"size":5218,"mtime":1619895334229,"results":"58","hashOfConfig":"32"},{"size":1985,"mtime":1620261499552,"results":"59","hashOfConfig":"32"},{"size":3428,"mtime":1620260870426,"results":"60","hashOfConfig":"32"},{"size":6050,"mtime":1620262976844,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"q7y6zv",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\index.js",[],["134","135"],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\App.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Header.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Product.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\ProductScreen.js",["136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetail } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nexport default function ProductScreen() {\r\n  const param = useParams();\r\n  const history = useHistory();\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetail\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetail(param.id));\r\n  }, []);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${param.id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-dark my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>{product.name}</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  rating={product.rating}\r\n                  text={`${product.numReviews} Reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h2>Price: ${product.price}</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item> {product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={6}>Price:</Col>\r\n                    <Col md={6}>\r\n                      <strong>{product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={6}>Status:</Col>\r\n                    <Col md={6}>\r\n                      <strong>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col sm={4}>Qty</Col>\r\n                      <Col sm={8}>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => {\r\n                            console.log(e.target.value);\r\n                            setQty(e.target.value);\r\n                          }}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm={12}>\r\n                      <Button\r\n                        onClick={addToCartHandler}\r\n                        className=\"btn-block\"\r\n                        type=\"button\"\r\n                        disabled={product.countInStock == 0}\r\n                      >\r\n                        Add to Cart\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\store.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\constants\\constants.js",[],["138","139"],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\Message.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\CartScreen.js",["140","141"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nexport default function CartScreen() {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const productId = params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const proceedToHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length == 0 ? (\r\n          <Message>\r\n            Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => {\r\n              return (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col sm={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded />\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                      <Link to={\"/product/\" + item.product}>{item.name}</Link>\r\n                    </Col>\r\n\r\n                    <Col md={2}>{item.price * item.qty}</Col>\r\n                    <Col sm={2}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(item.product, Number(e.target.value))\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col\r\n                      sm={2}\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={(e) => dispatch(removeFromCart(item.product))}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h4>\r\n                (\r\n                {cartItems.reduce((accum, item) => {\r\n                  return accum + Number(item.qty);\r\n                }, 0)}\r\n                ) Items\r\n              </h4>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              SubTotal $\r\n              {cartItems.reduce((accum, item) => {\r\n                return accum + Number(item.qty) * Number(item.price);\r\n              }, 0)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                onClick={proceedToHandler}\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length == 0}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\cartReducers.js",["142","143"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/constants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product == item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product == existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\FormContainer.js",["144","145"],"import React from \"react\";\r\nimport { Row, Col, Form, Button, Container } from \"react-bootstrap\";\r\n\r\nexport default function FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\RegisterScreen.js",["146","147"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login, register } from \"../actions/userActions\";\r\n\r\nexport default function RegisterScreen({ location }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { loading, error, userInfo } = useSelector(\r\n    (state) => state.userRegister\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have An Account ?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\ProfileScreen.js",["148"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Form, Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserDetails } from \"../actions/userActions\";\r\nimport { orderList } from \"../actions/orderActions\";\r\n\r\nexport default function ProfileScreen({ location }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { success } = useSelector((state) => state.userUpdateDetails);\r\n\r\n  const { loading: loadingOrders, error: errorOrders, orders } = useSelector(\r\n    (state) => state.orders\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(orderList());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserDetails({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Profile</h2>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>my orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>DETAILS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => {\r\n                return (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>{order.isPaid ? \"yes\" : \"no\"}</td>\r\n                    <td>{order.isDelivered ? \"yes\" : \"no\"}</td>\r\n                    <td>\r\n                      <Button variant=\"dark\" className=\"btn-sm\">\r\n                        <Link to={`/order/${order._id}`}>details</Link>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\ShippingScreen.js",["149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAdress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nexport default function ShippingScreen() {\r\n  const history = useHistory();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setpostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAdress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>city</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            onChange={(e) => setpostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\">Proceed to Payment</Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\PaymentScreen.js",["151"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nexport default function PaymentScreen() {\r\n  const history = useHistory();\r\n  const [paymentMethod, setPaymentMethod] = useState(\"paypal\");\r\n\r\n  const { shippingAddress } = useSelector((state) => state.cart);\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"paypal or credit card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"paypal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"stripe\"\r\n              id=\"stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"stripe\"\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\">Continue</Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\PlaceOrderScreen.js",["152","153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Row, Button, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nexport default function PlaceOrderScreen() {\r\n  const cart = useSelector((state) => state.cart);\r\n  const history = useHistory();\r\n  const { order, error, success, loading } = useSelector(\r\n    (state) => state.orderCreate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  cart.itemsPrice = cart.cartItems.reduce((accum, item) => {\r\n    return accum + item.price * item.qty;\r\n  }, 0);\r\n\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100;\r\n\r\n  cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2));\r\n\r\n  cart.totalPrice = Number(\r\n    (\r\n      Number(cart.shippingPrice) +\r\n      Number(cart.taxPrice) +\r\n      Number(cart.itemsPrice)\r\n    ).toFixed(2)\r\n  );\r\n\r\n  const placeOrderHandler = (event) => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode} {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, i) => {\r\n                    return (\r\n                      <ListGroup.Item key={i}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            ></Image>\r\n                          </Col>\r\n\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {error && (\r\n                <ListGroup.Item>\r\n                  <Message variant=\"danger\">{error}</Message>\r\n                </ListGroup.Item>\r\n              )}\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\michaelkhan\\Desktop\\webdevprojects\\ecommerce-application\\frontend\\src\\screens\\OrderScreen.js",["155","156","157"],"import React, { useState, useEffect } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Row, Button, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { ORDER_PAY_RESET } from \"../constants/constants\";\r\n\r\nexport default function OrderScreen({ match }) {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, order, error, success } = useSelector(\r\n    (state) => state.orderDetails\r\n  );\r\n\r\n  const { loading: loadingPay, success: successPay } = useSelector(\r\n    (state) => state.orderPay\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(orderId));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order]);\r\n\r\n  if (success) {\r\n    order.itemsPrice = order.orderItems.reduce((accum, item) => {\r\n      return accum + item.price * item.qty;\r\n    }, 0);\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">error</Message>\r\n  ) : (\r\n    <Row>\r\n      <h1>Order: {order._id}</h1>\r\n      <Col md={8}>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>\r\n            <h2>Shipping</h2>\r\n            <p>\r\n              <strong>Address: </strong>\r\n              {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n              {order.shippingAddress.postalCode} {order.shippingAddress.country}\r\n            </p>\r\n            {order.isDelivered ? (\r\n              <Message variant=\"success\">\r\n                Delivered on {order.deliveredAt}\r\n              </Message>\r\n            ) : (\r\n              <Message variant=\"danger\">Not delivered</Message>\r\n            )}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <h2>Payment Method</h2>\r\n            <p>\r\n              <strong>Method: </strong>\r\n              {order.paymentMethod}\r\n            </p>\r\n            {order.isPaid ? (\r\n              <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n            ) : (\r\n              <Message variant=\"danger\">Not Paid</Message>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <h2>Order Items</h2>\r\n            {order.orderItems.length === 0 ? (\r\n              <Message>No orders to show</Message>\r\n            ) : (\r\n              <ListGroup variant=\"flush\">\r\n                {order.orderItems.map((item, i) => {\r\n                  return (\r\n                    <ListGroup.Item key={i}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <h2>Order Summary</h2>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Items</Col>\r\n                <Col>${order.itemsPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Shipping</Col>\r\n                <Col>${order.shippingPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Tax</Col>\r\n                <Col>${order.taxPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Total</Col>\r\n                <Col>${order.totalPrice}</Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            {error && (\r\n              <ListGroup.Item>\r\n                <Message variant=\"danger\">{error}</Message>\r\n              </ListGroup.Item>\r\n            )}\r\n            {order.isPaid ? (\r\n              <> </>\r\n            ) : (\r\n              <ListGroup.Item>\r\n                {!loadingPay && !sdkReady ? (\r\n                  <Loader />\r\n                ) : (\r\n                  <PayPalButton\r\n                    amount={order.totalPrice}\r\n                    onSuccess={successPaymentHandler}\r\n                  />\r\n                )}\r\n              </ListGroup.Item>\r\n            )}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":29,"column":6,"nodeType":"164","endLine":29,"endColumn":8,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":117,"column":56,"nodeType":"168","messageId":"169","endLine":117,"endColumn":58},{"ruleId":"158","replacedBy":"170"},{"ruleId":"160","replacedBy":"171"},{"ruleId":"166","severity":1,"message":"167","line":40,"column":27,"nodeType":"168","messageId":"169","endLine":40,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":112,"column":44,"nodeType":"168","messageId":"169","endLine":112,"endColumn":46},{"ruleId":"166","severity":1,"message":"167","line":12,"column":63,"nodeType":"168","messageId":"169","endLine":12,"endColumn":65},{"ruleId":"166","severity":1,"message":"167","line":17,"column":23,"nodeType":"168","messageId":"169","endLine":17,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":2,"column":20,"nodeType":"174","messageId":"175","endLine":2,"endColumn":24},{"ruleId":"172","severity":1,"message":"176","line":2,"column":26,"nodeType":"174","messageId":"175","endLine":2,"endColumn":32},{"ruleId":"172","severity":1,"message":"177","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":15},{"ruleId":"166","severity":1,"message":"178","line":31,"column":18,"nodeType":"168","messageId":"169","endLine":31,"endColumn":20},{"ruleId":"166","severity":1,"message":"178","line":43,"column":18,"nodeType":"168","messageId":"169","endLine":43,"endColumn":20},{"ruleId":"172","severity":1,"message":"179","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"180","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"180","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"182","line":12,"column":34,"nodeType":"174","messageId":"175","endLine":12,"endColumn":41},{"ruleId":"162","severity":1,"message":"183","line":20,"column":6,"nodeType":"164","endLine":20,"endColumn":24,"suggestions":"184"},{"ruleId":"172","severity":1,"message":"185","line":3,"column":16,"nodeType":"174","messageId":"175","endLine":3,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":5,"column":15,"nodeType":"174","messageId":"175","endLine":5,"endColumn":21},{"ruleId":"162","severity":1,"message":"186","line":28,"column":6,"nodeType":"164","endLine":28,"endColumn":8,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'param.id'. Either include them or remove the dependency array.","ArrayExpression",["190"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["188"],["189"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'login' is defined but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["191"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [dispatch, param.id]",{"range":"199","text":"200"},"Update the dependencies array to be: [history, order._id, success]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"203","text":"204"},[826,828],"[dispatch, param.id]",[732,750],"[history, order._id, success]",[1000,1002],"[dispatch, orderId]"]